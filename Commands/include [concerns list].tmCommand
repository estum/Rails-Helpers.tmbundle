<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env bash

${TM_RUBY:-ruby} -rpathname -rrubygems -r"active_support/core_ext/string/inflections" &lt;&lt;-'RUBY'
proj = Pathname.new ENV["TM_PROJECT_DIRECTORY"]
prior, items, ns, nsmatch = [], [], nil, nil
source = Pathname.new(ENV['TM_FILEPATH']).sub_ext("").relative_path_from(proj)

Pathname.glob(proj / "app/**/concerns") do |conc|
  unless ns
    r = conc.dirname.relative_path_from(proj)
    source.ascend {|v| ns = source.relative_path_from(v).to_s.camelize if v == r; break if ns }
    nsmatch = /^#{ns}::(.+)$/i if ns
  end
  
  Pathname.glob(conc / "**/*.rb") do |file|
    dir, bn    = file.relative_path_from(conc).split
    class_name = (dir / bn.basename(".rb")).to_s.camelize
    if nsmatch &amp;&amp; nsmatch =~ class_name
      prior &lt;&lt; $1
    else
      items &lt;&lt; class_name
    end
  end
end

print "include ${1|#{(prior | items).join(?,)}|}$0"
RUBY</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>name</key>
	<string>include [concerns list]</string>
	<key>outputCaret</key>
	<string>heuristic</string>
	<key>outputFormat</key>
	<string>snippet</string>
	<key>outputLocation</key>
	<string>replaceInput</string>
	<key>scope</key>
	<string>source.ruby.rails</string>
	<key>tabTrigger</key>
	<string>inc</string>
	<key>uuid</key>
	<string>605E3576-E9A3-421C-8DBF-1A55E29F7D5B</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
